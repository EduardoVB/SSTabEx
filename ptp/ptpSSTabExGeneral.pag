VERSION 5.00
Begin VB.PropertyPage ptpSSTabExGeneral 
   AutoRedraw      =   -1  'True
   Caption         =   "General"
   ClientHeight    =   6324
   ClientLeft      =   0
   ClientTop       =   0
   ClientWidth     =   6420
   BeginProperty Font 
      Name            =   "Tahoma"
      Size            =   7.8
      Charset         =   0
      Weight          =   400
      Underline       =   0   'False
      Italic          =   0   'False
      Strikethrough   =   0   'False
   EndProperty
   LockControls    =   -1  'True
   PaletteMode     =   0  'Halftone
   ScaleHeight     =   6324
   ScaleWidth      =   6420
   Begin VB.CheckBox chkWordWrap 
      Caption         =   "WordWrap"
      Height          =   264
      Left            =   4824
      TabIndex        =   35
      Top             =   3852
      Width           =   1740
   End
   Begin VB.CheckBox chkHandleHighContrastTheme 
      Caption         =   "HandleHighContrastTheme"
      Height          =   264
      Left            =   2664
      TabIndex        =   34
      Top             =   3852
      Width           =   2136
   End
   Begin VB.ComboBox cboTabHoverHighlight 
      Height          =   288
      ItemData        =   "ptpSSTabExGeneral.pgx":0000
      Left            =   1740
      List            =   "ptpSSTabExGeneral.pgx":0002
      Style           =   2  'Dropdown List
      TabIndex        =   41
      Top             =   4464
      Width           =   4620
   End
   Begin VB.CheckBox chkSoftEdges 
      Caption         =   "SoftEdges"
      Height          =   264
      Left            =   4824
      TabIndex        =   39
      Top             =   4140
      Width           =   1740
   End
   Begin VB.CommandButton cmdHelp 
      Caption         =   "Help"
      Height          =   340
      Left            =   4824
      Style           =   1  'Graphical
      TabIndex        =   3
      ToolTipText     =   "Add Tab at this position"
      Top             =   24
      Visible         =   0   'False
      Width           =   1050
   End
   Begin VB.ComboBox cboAutoRelocateControls 
      Height          =   300
      ItemData        =   "ptpSSTabExGeneral.pgx":0004
      Left            =   1740
      List            =   "ptpSSTabExGeneral.pgx":0006
      Style           =   2  'Dropdown List
      TabIndex        =   45
      Top             =   5190
      Width           =   4620
   End
   Begin VB.CheckBox chkVisualStyles 
      Caption         =   "VisualStyles"
      Height          =   264
      Left            =   4824
      TabIndex        =   29
      Top             =   3276
      Width           =   1740
   End
   Begin VB.CheckBox chkShowFocusRect 
      Caption         =   "ShowFocusRect"
      Height          =   264
      Left            =   2664
      TabIndex        =   28
      Top             =   3276
      Width           =   1740
   End
   Begin VB.CheckBox chkUseMaskColor 
      Caption         =   "UseMaskColor"
      Height          =   264
      Left            =   4824
      TabIndex        =   31
      Top             =   3564
      Width           =   1740
   End
   Begin VB.CheckBox chkTabSelHighlight 
      Caption         =   "TabSelHighlight"
      Height          =   264
      Left            =   2664
      TabIndex        =   30
      Top             =   3564
      Width           =   1740
   End
   Begin VB.CheckBox chkChangeControlsBackColor 
      Caption         =   "ChangeControlsBackColor"
      Height          =   264
      Left            =   2664
      TabIndex        =   38
      Top             =   4140
      Width           =   2208
   End
   Begin VB.CheckBox chkShowDisabledState 
      Caption         =   "ShowDisabledState"
      Height          =   264
      Left            =   2664
      TabIndex        =   24
      Top             =   2988
      Width           =   1740
   End
   Begin VB.CommandButton cmdPopup 
      Caption         =   "6"
      BeginProperty Font 
         Name            =   "Marlett"
         Size            =   10.8
         Charset         =   2
         Weight          =   500
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   240
      Left            =   6024
      TabIndex        =   4
      Tag             =   "E"
      ToolTipText     =   "Display menu"
      Top             =   30
      Width           =   312
   End
   Begin VB.ComboBox cboTabPictureAlignment 
      Height          =   288
      ItemData        =   "ptpSSTabExGeneral.pgx":0008
      Left            =   1740
      List            =   "ptpSSTabExGeneral.pgx":000A
      Style           =   2  'Dropdown List
      TabIndex        =   43
      Top             =   4830
      Width           =   4620
   End
   Begin VB.TextBox txtTabHeight 
      Height          =   300
      Left            =   3645
      TabIndex        =   10
      Top             =   750
      Width           =   588
   End
   Begin VB.ComboBox cboTabAppearance 
      Height          =   315
      ItemData        =   "ptpSSTabExGeneral.pgx":000C
      Left            =   3645
      List            =   "ptpSSTabExGeneral.pgx":000E
      Style           =   2  'Dropdown List
      TabIndex        =   15
      Top             =   1515
      Width           =   2712
   End
   Begin VB.ComboBox cboShowRowsInPerspective 
      Height          =   315
      ItemData        =   "ptpSSTabExGeneral.pgx":0010
      Left            =   3645
      List            =   "ptpSSTabExGeneral.pgx":0012
      Style           =   2  'Dropdown List
      TabIndex        =   19
      Top             =   2235
      Width           =   2712
   End
   Begin VB.ComboBox cboOLEDropMode 
      Height          =   300
      ItemData        =   "ptpSSTabExGeneral.pgx":0014
      Left            =   1740
      List            =   "ptpSSTabExGeneral.pgx":0016
      Style           =   2  'Dropdown List
      TabIndex        =   49
      Top             =   5916
      Width           =   4620
   End
   Begin VB.ComboBox cboMousePointer 
      Height          =   300
      ItemData        =   "ptpSSTabExGeneral.pgx":0018
      Left            =   1740
      List            =   "ptpSSTabExGeneral.pgx":001A
      Style           =   2  'Dropdown List
      TabIndex        =   47
      Top             =   5556
      Width           =   4620
   End
   Begin VB.TextBox txtTabMinWidth 
      Height          =   300
      Left            =   1740
      TabIndex        =   37
      Top             =   4068
      Width           =   588
   End
   Begin VB.TextBox txtTabMaxWidth 
      Height          =   300
      Left            =   1740
      TabIndex        =   33
      Top             =   3708
      Width           =   588
   End
   Begin VB.ComboBox cboTabSelFontBold 
      Height          =   288
      ItemData        =   "ptpSSTabExGeneral.pgx":001C
      Left            =   3645
      List            =   "ptpSSTabExGeneral.pgx":001E
      Style           =   2  'Dropdown List
      TabIndex        =   21
      Top             =   2595
      Width           =   2712
   End
   Begin VB.TextBox txtTabSelExtraHeight 
      Height          =   300
      Left            =   1740
      TabIndex        =   27
      Top             =   3348
      Width           =   588
   End
   Begin VB.TextBox txtTabSeparation 
      Height          =   300
      Left            =   1740
      MaxLength       =   2
      TabIndex        =   23
      Top             =   2985
      Width           =   588
   End
   Begin VB.CheckBox chkEnabled 
      Caption         =   "Enabled"
      Height          =   264
      Left            =   4824
      TabIndex        =   25
      Top             =   2988
      Width           =   1740
   End
   Begin VB.ComboBox cboTabWidthStyle 
      Height          =   315
      ItemData        =   "ptpSSTabExGeneral.pgx":0020
      Left            =   3645
      List            =   "ptpSSTabExGeneral.pgx":0022
      Style           =   2  'Dropdown List
      TabIndex        =   17
      Top             =   1875
      Width           =   2712
   End
   Begin VB.ComboBox cboStyle 
      Height          =   315
      ItemData        =   "ptpSSTabExGeneral.pgx":0024
      Left            =   1740
      List            =   "ptpSSTabExGeneral.pgx":0026
      Style           =   2  'Dropdown List
      TabIndex        =   12
      Top             =   1110
      Width           =   4620
   End
   Begin VB.TextBox txtTabsPerRow 
      Height          =   300
      Left            =   1740
      MaxLength       =   2
      TabIndex        =   8
      Top             =   750
      Width           =   588
   End
   Begin VB.ComboBox cboOrientation 
      Height          =   315
      ItemData        =   "ptpSSTabExGeneral.pgx":0028
      Left            =   1740
      List            =   "ptpSSTabExGeneral.pgx":002A
      Style           =   2  'Dropdown List
      TabIndex        =   6
      Top             =   390
      Width           =   4620
   End
   Begin VB.TextBox txtTabs 
      Height          =   300
      Left            =   1740
      MaxLength       =   3
      TabIndex        =   1
      Top             =   30
      Width           =   588
   End
   Begin VB.PictureBox picCover 
      BorderStyle     =   0  'None
      Height          =   372
      Left            =   2520
      ScaleHeight     =   372
      ScaleWidth      =   3900
      TabIndex        =   2
      Top             =   0
      Width           =   3900
   End
   Begin VB.ComboBox cboPopup 
      Height          =   312
      Left            =   2664
      Style           =   2  'Dropdown List
      TabIndex        =   50
      Top             =   0
      Width           =   3680
   End
   Begin VB.Label Label19 
      Alignment       =   1  'Right Justify
      Caption         =   "TabHoverHighlight:"
      Height          =   228
      Left            =   96
      TabIndex        =   40
      Top             =   4500
      Width           =   1596
   End
   Begin VB.Label Label18 
      Alignment       =   1  'Right Justify
      Caption         =   "AutoRelocateControls:"
      Height          =   228
      Left            =   0
      TabIndex        =   44
      Top             =   5196
      Width           =   1680
   End
   Begin VB.Label Label17 
      Alignment       =   1  'Right Justify
      Caption         =   "TabPictureAlignment:"
      Height          =   228
      Left            =   96
      TabIndex        =   42
      Top             =   4860
      Width           =   1572
   End
   Begin VB.Label Label16 
      Alignment       =   1  'Right Justify
      Caption         =   "TabHeight:"
      Height          =   228
      Left            =   2580
      TabIndex        =   9
      Top             =   792
      Width           =   1020
   End
   Begin VB.Label Label8 
      Alignment       =   1  'Right Justify
      Caption         =   "TabAppearance:"
      Height          =   225
      Left            =   1740
      TabIndex        =   14
      Top             =   1545
      Width           =   1815
   End
   Begin VB.Label Label6 
      Alignment       =   1  'Right Justify
      Caption         =   "ShowRowsInPerspective:"
      Height          =   228
      Left            =   1488
      TabIndex        =   18
      Top             =   2268
      Width           =   2064
   End
   Begin VB.Label Label15 
      Alignment       =   1  'Right Justify
      Caption         =   "OLEDropMode:"
      Height          =   228
      Left            =   192
      TabIndex        =   48
      Top             =   5940
      Width           =   1488
   End
   Begin VB.Label Label14 
      Alignment       =   1  'Right Justify
      Caption         =   "MousePointer:"
      Height          =   228
      Left            =   192
      TabIndex        =   46
      Top             =   5580
      Width           =   1488
   End
   Begin VB.Label Label13 
      Alignment       =   1  'Right Justify
      Caption         =   "TabMinWidth:"
      Height          =   228
      Left            =   192
      TabIndex        =   36
      Top             =   4116
      Width           =   1488
   End
   Begin VB.Label Label12 
      Alignment       =   1  'Right Justify
      Caption         =   "TabMaxWidth:"
      Height          =   228
      Left            =   192
      TabIndex        =   32
      Top             =   3756
      Width           =   1488
   End
   Begin VB.Label Label11 
      Alignment       =   1  'Right Justify
      Caption         =   "TabSelFontBold:"
      Height          =   225
      Left            =   1740
      TabIndex        =   20
      Top             =   2625
      Width           =   1815
   End
   Begin VB.Label Label10 
      Alignment       =   1  'Right Justify
      Caption         =   "TabSelExtraHeight:"
      Height          =   228
      Left            =   192
      TabIndex        =   26
      Top             =   3396
      Width           =   1488
   End
   Begin VB.Label Label9 
      Alignment       =   1  'Right Justify
      Caption         =   "TabSeparation:"
      Height          =   228
      Left            =   192
      TabIndex        =   22
      Top             =   3036
      Width           =   1488
   End
   Begin VB.Label Label7 
      Alignment       =   1  'Right Justify
      Caption         =   "TabWidthStyle:"
      Height          =   225
      Left            =   1740
      TabIndex        =   16
      Top             =   1905
      Width           =   1815
   End
   Begin VB.Label Label5 
      Alignment       =   1  'Right Justify
      Caption         =   "Customize Style:"
      Height          =   228
      Left            =   264
      TabIndex        =   13
      Top             =   1548
      Width           =   1416
   End
   Begin VB.Label Label4 
      Alignment       =   1  'Right Justify
      Caption         =   "Style:"
      Height          =   228
      Left            =   192
      TabIndex        =   11
      Top             =   1152
      Width           =   1488
   End
   Begin VB.Label Label3 
      Alignment       =   1  'Right Justify
      Caption         =   "TabsPerRow:"
      Height          =   228
      Left            =   192
      TabIndex        =   7
      Top             =   792
      Width           =   1488
   End
   Begin VB.Label Label2 
      Alignment       =   1  'Right Justify
      Caption         =   "Orientation:"
      Height          =   228
      Left            =   192
      TabIndex        =   5
      Top             =   432
      Width           =   1488
   End
   Begin VB.Label Label1 
      Alignment       =   1  'Right Justify
      Caption         =   "Tab Count:"
      Height          =   228
      Left            =   192
      TabIndex        =   0
      Top             =   72
      Width           =   1488
   End
End
Attribute VB_Name = "ptpSSTabExGeneral"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit

Private Declare Function SendMessage Lib "user32.dll" Alias "SendMessageA" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByRef lParam As Any) As Long
Private Const CB_SHOWDROPDOWN = &H14F

Private mLoading As Boolean
Private mPresetNames As New Collection
Private mLoadedPropertyNames As Collection
Private mLoadedPropertyValues As Collection

Private Sub cboAutoRelocateControls_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub cboMousePointer_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub cboOLEDropMode_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub cboOrientation_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub cboShowRowsInPerspective_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub cboStyle_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub cboTabAppearance_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub cboTabHoverHighlight_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub cboTabPictureAlignment_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub cboTabSelFontBold_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub cboTabWidthStyle_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub chkChangeControlsBackColor_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub chkEnabled_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub chkShowDisabledState_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub chkShowFocusRect_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub chkSoftEdges_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub chkHandleHighContrastTheme_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub chkTabSelHighlight_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub chkUseMaskColor_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub chkVisualStyles_Click()
    If Not mLoading Then Changed = True
End Sub

Private Sub chkWordWrap_Click()
    If Not mLoading Then Changed = True
End Sub

'Private Sub cmdHelp_Click()
'    ShowComponentHelp TypeName(SelectedControls(0))
'End Sub

Private Sub PropertyPage_ApplyChanges()
    Dim c As Long
    
    If Not ValidateInput Then
        Changed = True
        Exit Sub
    End If
    
    SelectedControls(0).Redraw = False
    SelectedControls(0).Tabs = Val(txtTabs.Text)
    SelectedControls(0).TabOrientation = cboOrientation.ItemData(cboOrientation.ListIndex)
    SelectedControls(0).TabsPerRow = Val(txtTabsPerRow.Text)
    SelectedControls(0).Style = cboStyle.ItemData(cboStyle.ListIndex)
    SelectedControls(0).ShowRowsInPerspective = cboShowRowsInPerspective.ItemData(cboShowRowsInPerspective.ListIndex)
    SelectedControls(0).TabWidthStyle = cboTabWidthStyle.ItemData(cboTabWidthStyle.ListIndex)
    SelectedControls(0).TabAppearance = cboTabAppearance.ItemData(cboTabAppearance.ListIndex)
    SelectedControls(0).TabSelFontBold = cboTabSelFontBold.ItemData(cboTabSelFontBold.ListIndex)
    SelectedControls(0).TabSeparation = Val(txtTabSeparation.Text)
    SelectedControls(0).TabSelExtraHeight = CSng(txtTabSelExtraHeight.Text)
    SelectedControls(0).TabMaxWidth = CSng(txtTabMaxWidth.Text)
    SelectedControls(0).TabMinWidth = CSng(txtTabMinWidth.Text)
    SelectedControls(0).VisualStyles = CBool(chkVisualStyles.Value)
    SelectedControls(0).WordWrap = CBool(chkWordWrap.Value)
    SelectedControls(0).Enabled = CBool(chkEnabled.Value)
    SelectedControls(0).UseMaskColor = CBool(chkUseMaskColor.Value)
    SelectedControls(0).TabSelHighlight = CBool(chkTabSelHighlight.Value)
    SelectedControls(0).ShowFocusRect = CBool(chkShowFocusRect.Value)
    SelectedControls(0).ShowDisabledState = CBool(chkShowDisabledState.Value)
    SelectedControls(0).ChangeControlsBackColor = CBool(chkChangeControlsBackColor.Value)
    SelectedControls(0).SoftEdges = CBool(chkSoftEdges.Value)
    SelectedControls(0).HandleHighContrastTheme = CBool(chkHandleHighContrastTheme.Value)
    SelectedControls(0).TabHoverHighlight = cboTabHoverHighlight.ItemData(cboTabHoverHighlight.ListIndex)
    SelectedControls(0).TabPictureAlignment = cboTabPictureAlignment.ItemData(cboTabPictureAlignment.ListIndex)
    SelectedControls(0).AutoRelocateControls = cboAutoRelocateControls.ItemData(cboAutoRelocateControls.ListIndex)
    SelectedControls(0).MousePointer = cboMousePointer.ItemData(cboMousePointer.ListIndex)
    SelectedControls(0).OLEDropMode = cboOLEDropMode.ItemData(cboOLEDropMode.ListIndex)
    SelectedControls(0).TabHeight = CSng(txtTabHeight.Text)
    SelectedControls(0).Redraw = True
    
    If Not mLoadedPropertyNames Is Nothing Then
        For c = 1 To mLoadedPropertyNames.Count
            Select Case mLoadedPropertyNames(c)
                Case "ForeColor"
                    SelectedControls(0).ForeColor = CLng(mLoadedPropertyValues(c))
                Case "BackColor"
                    SelectedControls(0).BackColor = CLng(mLoadedPropertyValues(c))
                Case "MaskColor"
                    SelectedControls(0).MaskColor = CLng(mLoadedPropertyValues(c))
                Case "TabBackColor"
                    SelectedControls(0).TabBackColor = CLng(mLoadedPropertyValues(c))
                Case "Font.Name"
                    SelectedControls(0).Font.Name = mLoadedPropertyValues(c)
                Case "Font.Size"
                    SelectedControls(0).Font.Size = Val(mLoadedPropertyValues(c))
                Case "Font.Bold"
                    SelectedControls(0).Font.Bold = CBool(CLng(mLoadedPropertyValues(c)))
                Case "Font.Italic"
                    SelectedControls(0).Font.Italic = CBool(CLng(mLoadedPropertyValues(c)))
                Case "Font.Underline"
                    SelectedControls(0).Font.Underline = CBool(CLng(mLoadedPropertyValues(c)))
                Case "TabSelBackColor"
                    SelectedControls(0).TabSelBackColor = CLng(mLoadedPropertyValues(c))
                Case "TabSelForeColor"
                    SelectedControls(0).TabSelForeColor = CLng(mLoadedPropertyValues(c))
            End Select
        Next c
        Set mLoadedPropertyNames = Nothing
        Set mLoadedPropertyValues = Nothing
    End If
    
    Set mPresetNames = Nothing
End Sub

Private Function ValidateInput() As Boolean
    If Not ValidateTxtNumericInteger(txtTabs) Then Exit Function
    If Not ValidateTxtNumericInteger(txtTabsPerRow) Then Exit Function
    If Not ValidateTxtNumericInteger(txtTabSeparation) Then Exit Function
    If Not ValidateTxtNumeric(txtTabSelExtraHeight) Then Exit Function
    If Not ValidateTxtNumeric(txtTabMaxWidth) Then Exit Function
    If Not ValidateTxtNumeric(txtTabMinWidth) Then Exit Function
    ValidateInput = True
End Function

Private Function ValidateTxtNumericInteger(nTextBox As TextBox) As Boolean
    If (Not IsNumeric(nTextBox.Text)) Or (CSng(nTextBox.Text) <> Val(nTextBox.Text)) Then
        MsgBox "Invalid property value.", vbExclamation
        nTextBox.SelStart = 0
        nTextBox.SelLength = Len(nTextBox.Text)
        SetFocusTo nTextBox
        Exit Function
    End If
    ValidateTxtNumericInteger = True
End Function

Private Function ValidateTxtNumeric(nTextBox As TextBox) As Boolean
    If Not IsNumeric(nTextBox.Text) Then
        MsgBox "Invalid property value.", vbExclamation
        nTextBox.SelStart = 0
        nTextBox.SelLength = Len(nTextBox.Text)
        SetFocusTo nTextBox
        Exit Function
    End If
    ValidateTxtNumeric = True
End Function

Private Sub SetFocusTo(nControl As Object)
    On Error Resume Next
    nControl.SetFocus
End Sub

Private Sub PropertyPage_SelectionChanged()
    mLoading = True
    
    cboOrientation.Clear
    cboOrientation.AddItem ssTabOrientationTop & " - ssTabOrientationTop": cboOrientation.ItemData(cboOrientation.NewIndex) = ssTabOrientationTop
    cboOrientation.AddItem ssTabOrientationBottom & " - ssTabOrientationBottom": cboOrientation.ItemData(cboOrientation.NewIndex) = ssTabOrientationBottom
    cboOrientation.AddItem ssTabOrientationLeft & " - ssTabOrientationLeft": cboOrientation.ItemData(cboOrientation.NewIndex) = ssTabOrientationLeft
    cboOrientation.AddItem ssTabOrientationRight & " - ssTabOrientationRight": cboOrientation.ItemData(cboOrientation.NewIndex) = ssTabOrientationRight
    
    cboStyle.Clear
    cboStyle.AddItem ssStyleTabbedDialog & " - ssStyleTabbedDialog": cboStyle.ItemData(cboStyle.NewIndex) = ssStyleTabbedDialog
    cboStyle.AddItem ssStylePropertyPage & " - ssStylePropertyPage": cboStyle.ItemData(cboStyle.NewIndex) = ssStylePropertyPage
    cboStyle.AddItem ssStyleTabStrip & " - ssStyleTabStrip": cboStyle.ItemData(cboStyle.NewIndex) = ssStyleTabStrip
    
    cboShowRowsInPerspective.Clear
    cboShowRowsInPerspective.AddItem ssYNAuto & " - Automatic": cboShowRowsInPerspective.ItemData(cboShowRowsInPerspective.NewIndex) = ssYNAuto
    cboShowRowsInPerspective.AddItem ssYes & " - Yes": cboShowRowsInPerspective.ItemData(cboShowRowsInPerspective.NewIndex) = ssYes
    cboShowRowsInPerspective.AddItem ssNo & " - No": cboShowRowsInPerspective.ItemData(cboShowRowsInPerspective.NewIndex) = ssNo
    
    cboTabWidthStyle.Clear
    cboTabWidthStyle.AddItem ssTWSJustified & " - efnTwsJustified": cboTabWidthStyle.ItemData(cboTabWidthStyle.NewIndex) = ssTWSJustified
    cboTabWidthStyle.AddItem ssTWSNonJustified & " - ssTWSNonJustified": cboTabWidthStyle.ItemData(cboTabWidthStyle.NewIndex) = ssTWSNonJustified
    cboTabWidthStyle.AddItem ssTWSFixed & " - ssTWSFixed": cboTabWidthStyle.ItemData(cboTabWidthStyle.NewIndex) = ssTWSFixed
    cboTabWidthStyle.AddItem ssTWSAuto & " - Automatic": cboTabWidthStyle.ItemData(cboTabWidthStyle.NewIndex) = ssTWSAuto
    
    cboTabAppearance.Clear
    cboTabAppearance.AddItem ssTAAuto & " - Automatic": cboTabAppearance.ItemData(cboTabAppearance.NewIndex) = ssTAAuto
    cboTabAppearance.AddItem ssTATabbedDialog & " - ssTATabbedDialog": cboTabAppearance.ItemData(cboTabAppearance.NewIndex) = ssTATabbedDialog
    cboTabAppearance.AddItem ssTATabbedDialogRounded & " - ssTATabbedDialogRounded": cboTabAppearance.ItemData(cboTabAppearance.NewIndex) = ssTATabbedDialogRounded
    cboTabAppearance.AddItem ssTAPropertyPage & " - ssTAPropertyPage": cboTabAppearance.ItemData(cboTabAppearance.NewIndex) = ssTAPropertyPage
    cboTabAppearance.AddItem ssTAPropertyPageRounded & " - ssTAPropertyPageRounded": cboTabAppearance.ItemData(cboTabAppearance.NewIndex) = ssTAPropertyPageRounded
    
    cboTabSelFontBold.Clear
    cboTabSelFontBold.AddItem ssYNAuto & " - Automatic": cboTabSelFontBold.ItemData(cboTabSelFontBold.NewIndex) = ssYNAuto
    cboTabSelFontBold.AddItem ssYes & " - Yes": cboTabSelFontBold.ItemData(cboTabSelFontBold.NewIndex) = ssYes
    cboTabSelFontBold.AddItem ssNo & " - No": cboTabSelFontBold.ItemData(cboTabSelFontBold.NewIndex) = ssNo
    
    cboTabHoverHighlight.Clear
    cboTabHoverHighlight.AddItem ssTHHNo & " - ssTHHNo": cboTabHoverHighlight.ItemData(cboTabHoverHighlight.NewIndex) = ssTHHNo
    cboTabHoverHighlight.AddItem ssTHHInstant & " - ssTHHInstant": cboTabHoverHighlight.ItemData(cboTabHoverHighlight.NewIndex) = ssTHHInstant
    cboTabHoverHighlight.AddItem ssTHHEffect & " - ssTHHEffect": cboTabHoverHighlight.ItemData(cboTabHoverHighlight.NewIndex) = ssTHHEffect
    
    cboTabPictureAlignment.Clear
    cboTabPictureAlignment.AddItem ssPicAlignBeforeCaption & " - ssPicAlignBeforeCaption": cboTabPictureAlignment.ItemData(cboTabPictureAlignment.NewIndex) = ssPicAlignBeforeCaption
    cboTabPictureAlignment.AddItem ssPicAlignCenteredBeforeCaption & " - ssPicAlignCenteredBeforeCaption": cboTabPictureAlignment.ItemData(cboTabPictureAlignment.NewIndex) = ssPicAlignCenteredBeforeCaption
    cboTabPictureAlignment.AddItem ssPicAlignAfterCaption & " - ssPicAlignAfterCaption": cboTabPictureAlignment.ItemData(cboTabPictureAlignment.NewIndex) = ssPicAlignAfterCaption
    cboTabPictureAlignment.AddItem ssPicAlignCenteredAfterCaption & " - ssPicAlignCenteredAfterCaption": cboTabPictureAlignment.ItemData(cboTabPictureAlignment.NewIndex) = ssPicAlignCenteredAfterCaption
    
    cboAutoRelocateControls.Clear
    cboAutoRelocateControls.AddItem ssRelocateNever & " - ssRelocateNever": cboAutoRelocateControls.ItemData(cboAutoRelocateControls.NewIndex) = ssRelocateNever
    cboAutoRelocateControls.AddItem ssRelocateAlways & " - ssRelocateAlways": cboAutoRelocateControls.ItemData(cboAutoRelocateControls.NewIndex) = ssRelocateAlways
    cboAutoRelocateControls.AddItem ssRelocateOnTabOrientationChange & " - ssRelocateOnTabOrientationChange": cboAutoRelocateControls.ItemData(cboAutoRelocateControls.NewIndex) = ssRelocateOnTabOrientationChange
    
    cboMousePointer.Clear
    cboMousePointer.AddItem ssDefault & " - ssDefault": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssDefault
    cboMousePointer.AddItem ssArrow & " - ssArrow": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssArrow
    cboMousePointer.AddItem ssCross & " - ssCross": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssCross
    cboMousePointer.AddItem ssIBeam & " - ssIBeam": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssIBeam
    cboMousePointer.AddItem ssIcon & " - ssIcon": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssIcon
    cboMousePointer.AddItem ssSize & " - ssSize": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssSize
    cboMousePointer.AddItem ssSizeNESW & " - ssSizeNESW": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssSizeNESW
    cboMousePointer.AddItem ssSizeNS & " - ssSizeNS": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssSizeNS
    cboMousePointer.AddItem ssSizeNWSE & " - ssSizeNWSE": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssSizeNWSE
    cboMousePointer.AddItem ssSizeEW & " - ssSizeEW": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssSizeEW
    cboMousePointer.AddItem ssUpArrow & " - ssUpArrow": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssUpArrow
    cboMousePointer.AddItem ssHourglass & " - ssHourglass": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssHourglass
    cboMousePointer.AddItem ssNoDrop & " - ssNoDrop": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssNoDrop
    cboMousePointer.AddItem ssArrowHourglass & " - ssArrowHourglass": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssArrowHourglass
    cboMousePointer.AddItem ssArrowQuestion & " - ssArrowQuestion": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssArrowQuestion
    cboMousePointer.AddItem ssSizeAll & " - ssSizeAll": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssSizeAll
    cboMousePointer.AddItem ssCustom & " - ssCustom": cboMousePointer.ItemData(cboMousePointer.NewIndex) = ssCustom
    
    cboOLEDropMode.Clear
    cboOLEDropMode.AddItem ssOLEDropNone & " - ssOLEDropNone": cboOLEDropMode.ItemData(cboOLEDropMode.NewIndex) = ssOLEDropNone
    cboOLEDropMode.AddItem ssOLEDropManual & " - ssOLEDropManual": cboOLEDropMode.ItemData(cboOLEDropMode.NewIndex) = ssOLEDropManual
    
    txtTabs.Text = SelectedControls(0).Tabs
    SelectInComboByItemData cboOrientation, SelectedControls(0).TabOrientation
    txtTabsPerRow.Text = SelectedControls(0).TabsPerRow
    SelectInComboByItemData cboStyle, SelectedControls(0).Style
    SelectInComboByItemData cboShowRowsInPerspective, SelectedControls(0).ShowRowsInPerspective
    SelectInComboByItemData cboTabWidthStyle, SelectedControls(0).TabWidthStyle
    SelectInComboByItemData cboTabAppearance, SelectedControls(0).TabAppearance
    SelectInComboByItemData cboTabSelFontBold, SelectedControls(0).TabSelFontBold
    txtTabSeparation.Text = SelectedControls(0).TabSeparation
    txtTabSelExtraHeight.Text = SelectedControls(0).TabSelExtraHeight
    txtTabMaxWidth.Text = SelectedControls(0).TabMaxWidth
    txtTabMinWidth.Text = SelectedControls(0).TabMinWidth
    chkVisualStyles.Value = IIf(SelectedControls(0).VisualStyles, 1, 0)
    chkWordWrap.Value = IIf(SelectedControls(0).WordWrap, 1, 0)
    chkEnabled.Value = IIf(SelectedControls(0).Enabled, 1, 0)
    chkUseMaskColor.Value = IIf(SelectedControls(0).UseMaskColor, 1, 0)
    chkTabSelHighlight.Value = IIf(SelectedControls(0).TabSelHighlight, 1, 0)
    chkShowFocusRect.Value = IIf(SelectedControls(0).ShowFocusRect, 1, 0)
    chkShowDisabledState.Value = IIf(SelectedControls(0).ShowDisabledState, 1, 0)
    chkChangeControlsBackColor.Value = IIf(SelectedControls(0).ChangeControlsBackColor, 1, 0)
    chkSoftEdges.Value = IIf(SelectedControls(0).SoftEdges, 1, 0)
    chkHandleHighContrastTheme.Value = IIf(SelectedControls(0).HandleHighContrastTheme, 1, 0)
    SelectInComboByItemData cboTabHoverHighlight, SelectedControls(0).TabHoverHighlight
    SelectInComboByItemData cboTabPictureAlignment, SelectedControls(0).TabPictureAlignment
    SelectInComboByItemData cboAutoRelocateControls, SelectedControls(0).AutoRelocateControls
    SelectInComboByItemData cboMousePointer, SelectedControls(0).MousePointer
    SelectInComboByItemData cboOLEDropMode, SelectedControls(0).OLEDropMode
    txtTabHeight.Text = SelectedControls(0).TabHeight
    
    picCover.Height = cboPopup.Height + Screen.TwipsPerPixelY * 3
    
    mLoading = False
End Sub

Private Sub SelectInComboByItemData(nCombo As Control, nItemData As Long)
    Dim c As Long
    
    For c = 0 To nCombo.ListCount - 1
        If nCombo.ItemData(c) = nItemData Then
            nCombo.ListIndex = c
            Exit Sub
        End If
    Next c
End Sub

Private Sub txtTabHeight_Change()
    If Not mLoading Then Changed = True
End Sub

Private Sub txtTabMaxWidth_Change()
    If Not mLoading Then Changed = True
End Sub

Private Sub txtTabMaxWidth_GotFocus()
    SelectTxt txtTabMaxWidth
End Sub

Private Sub txtTabMinWidth_Change()
    If Not mLoading Then Changed = True
End Sub

Private Sub txtTabMinWidth_GotFocus()
    SelectTxt txtTabMinWidth
End Sub

Private Sub txtTabs_Change()
    If Not mLoading Then Changed = True
End Sub

Private Sub txtTabs_GotFocus()
    SelectTxt txtTabs
End Sub

Private Sub txtTabSelExtraHeight_Change()
    If Not mLoading Then Changed = True
End Sub

Private Sub txtTabSelExtraHeight_GotFocus()
    SelectTxt txtTabSelExtraHeight
End Sub

Private Sub txtTabSeparation_Change()
    If Not mLoading Then Changed = True
End Sub

Private Sub txtTabSeparation_GotFocus()
    SelectTxt txtTabSeparation
End Sub

Private Sub txtTabsPerRow_Change()
    If Not mLoading Then Changed = True
End Sub

Private Sub SelectTxt(nTextBox As Control)
    nTextBox.SelStart = 0
    nTextBox.SelLength = Len(nTextBox.Text)
End Sub
    
Private Sub txtTabsPerRow_GotFocus()
    SelectTxt txtTabsPerRow
End Sub

Private Sub cboPopup_Click()
    Dim iName As String
    Dim iKey As String
    Dim iStr As String
    
    If cboPopup.ListIndex = 0 Then
        SavePreset
    ElseIf cboPopup.ListIndex = 2 Then
        iName = InputBox("Enter the name or the number of the preset to delete (case is ignored)", "Delete preset")
        If iName = "" Then Exit Sub
        
        On Error Resume Next
        Err.Clear
        If IsNumeric(iName) Then
            iStr = mPresetNames(Val(iName))
            If iStr = "" Then
                MsgBox "Preset not found", vbExclamation
                Exit Sub
            End If
            iName = iStr
        End If
        DeleteSetting TypeName(SelectedControls(0)), "Presets", iName
        If Err.Number Then
            MsgBox "Preset not found", vbExclamation
            Exit Sub
        End If
    ElseIf (cboPopup.ListIndex = 1) Or (cboPopup.ListIndex = 3) Then
        Exit Sub
    Else
        On Error Resume Next
        iKey = mPresetNames(cboPopup.ListIndex - 3)
        If iKey = "" Then Exit Sub
        LoadPreset iKey
    End If
End Sub

Private Function KeyExists(nKey As String, nCol As Collection)
    Dim iVar As Variant
    
    On Error Resume Next
    iVar = nCol(nKey)
    KeyExists = Err.Number = 0
End Function

Private Sub cmdPopup_Click()
    BuildPopup
    ShowPopup
End Sub

Private Sub BuildPopup()
    Dim c As Long
    
    cboPopup.Clear
    cboPopup.AddItem "Save these values as a preset"
    
    LoadPresetsList
    
    If mPresetNames.Count > 0 Then
        cboPopup.AddItem "--------------------------------------"
        cboPopup.AddItem "Delete preset"
        cboPopup.AddItem "--------------------------------------"
        
        For c = 1 To mPresetNames.Count
            cboPopup.AddItem "Load preset " & c & ": " & mPresetNames(c)
        Next
    End If
End Sub

Private Sub LoadPresetsList()
    Dim iPresets As Variant
    Dim c As Long
    
    Set mPresetNames = New Collection
    iPresets = GetAllSettings(TypeName(SelectedControls(0)), "Presets")
    If Not IsEmpty(iPresets) Then
        For c = LBound(iPresets, 1) To UBound(iPresets, 1)
            mPresetNames.Add iPresets(c, 0), iPresets(c, 0)
        Next c
    End If
End Sub

Private Sub ShowPopup()
    SendMessage cboPopup.hWnd, CB_SHOWDROPDOWN, True, ByVal 0&
End Sub

Private Sub SavePreset()
    Dim iName As String
    Dim iCtl As Control
    Dim iTypeName As String
    Dim iStr As String
    
    iName = CStr(mPresetNames.Count + 1)
    Do Until Not KeyExists("P" & iName, mPresetNames)
        iName = CStr(Val(iName) + 1)
    Loop
    iName = "P" & iName
    
    iName = InputBox("Enter a name for the preset:", "Preset name", iName)
    If iName = "" Then Exit Sub
    Do Until Not IsNumeric(iName)
        MsgBox "The preset name can't be just numeric, add some letter.", vbExclamation
        iName = InputBox("Enter a name for the preset:", "Preset name", iName)
        If iName = "" Then Exit Sub
    Loop
    
    iStr = ""
    For Each iCtl In PropertyPage.Controls
        iTypeName = TypeName(iCtl)
        Select Case iCtl.Name
            Case "txtTabs", "cboOrientation", "txtTabsPerRow"
                ' we don't want to save these ones
            Case Else
                Select Case iTypeName
                    Case "TextBox", "ComboBox", "CheckBox"
                        If iCtl.Name <> "cboPopup" Then
                            If iStr <> "" Then iStr = iStr & "|#'"
                            iStr = iStr & iCtl.Name & ":$\*"
                            If iTypeName = "TextBox" Then
                                iStr = iStr & iCtl.Text
                            ElseIf iTypeName = "ComboBox" Then
                                iStr = iStr & iCtl.ListIndex
                            ElseIf iTypeName = "CheckBox" Then
                                iStr = iStr & iCtl.Value
                            End If
                        End If
                End Select
        End Select
    Next
    iStr = iStr & "|#'" & "ForeColor" & ":$\*" & CStr(SelectedControls(0).ForeColor)
    iStr = iStr & "|#'" & "BackColor" & ":$\*" & CStr(SelectedControls(0).BackColor)
    iStr = iStr & "|#'" & "MaskColor" & ":$\*" & CStr(SelectedControls(0).MaskColor)
    iStr = iStr & "|#'" & "TabBackColor" & ":$\*" & CStr(SelectedControls(0).TabBackColor)
    iStr = iStr & "|#'" & "Font.Name" & ":$\*" & CStr(SelectedControls(0).Font.Name)
    iStr = iStr & "|#'" & "Font.Size" & ":$\*" & Trim$(Str$(SelectedControls(0).Font.Size))
    iStr = iStr & "|#'" & "Font.Bold" & ":$\*" & CStr(CLng(SelectedControls(0).Font.Bold))
    iStr = iStr & "|#'" & "Font.Italic" & ":$\*" & CStr(CLng(SelectedControls(0).Font.Italic))
    iStr = iStr & "|#'" & "Font.Underline" & ":$\*" & CStr(CLng(SelectedControls(0).Font.Underline))
    iStr = iStr & "|#'" & "TabSelBackColor" & ":$\*" & CStr(SelectedControls(0).TabSelBackColor)
    iStr = iStr & "|#'" & "TabSelForeColor" & ":$\*" & CStr(SelectedControls(0).TabSelForeColor)
    
    SaveSetting TypeName(SelectedControls(0)), "Presets", iName, iStr
    
End Sub

Private Sub LoadPreset(nName As String)
    Dim iControls() As String
    Dim iControlNameValue() As String
    Dim c As Long
    Dim iCtl As Control
    Dim iTypeName As String
    Dim iStr As String
    
    On Error Resume Next
    iStr = GetSetting(TypeName(SelectedControls(0)), "Presets", nName)
    If iStr = "" Then Exit Sub
    iControls = Split(iStr, "|#'")
    
    Set mLoadedPropertyNames = New Collection
    Set mLoadedPropertyValues = New Collection
    
    For c = 0 To UBound(iControls)
        iControlNameValue = Split(iControls(c), ":$\*")
        If UBound(iControlNameValue) <> 1 Then Exit Sub
        Set iCtl = Nothing
        Set iCtl = PropertyPage.Controls(iControlNameValue(0))
        If Not iCtl Is Nothing Then
            iTypeName = TypeName(iCtl)
            If iTypeName = "TextBox" Then
                iCtl.Text = iControlNameValue(1)
            ElseIf iTypeName = "ComboBox" Then
                iCtl.ListIndex = Val(iControlNameValue(1))
            ElseIf iTypeName = "CheckBox" Then
                iCtl.Value = Val(iControlNameValue(1))
            End If
        Else
            mLoadedPropertyNames.Add iControlNameValue(0)
            mLoadedPropertyValues.Add iControlNameValue(1)
            Changed = True
        End If
    Next
    
End Sub
