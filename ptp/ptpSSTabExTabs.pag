VERSION 5.00
Begin VB.PropertyPage ptpSSTabExTabs 
   Caption         =   "Tabs"
   ClientHeight    =   6324
   ClientLeft      =   0
   ClientTop       =   0
   ClientWidth     =   6420
   BeginProperty Font 
      Name            =   "Tahoma"
      Size            =   7.8
      Charset         =   0
      Weight          =   400
      Underline       =   0   'False
      Italic          =   0   'False
      Strikethrough   =   0   'False
   EndProperty
   LockControls    =   -1  'True
   PaletteMode     =   0  'Halftone
   ScaleHeight     =   6324
   ScaleWidth      =   6420
   Begin VB.CommandButton cmdMoveControlToTab 
      Caption         =   "Move a control to this tab"
      Height          =   315
      Left            =   3348
      Style           =   1  'Graphical
      TabIndex        =   15
      ToolTipText     =   "Add Tab at this position"
      Top             =   1824
      Width           =   2748
   End
   Begin VB.CommandButton cmdHelp 
      Caption         =   "Help"
      Height          =   340
      Left            =   288
      Style           =   1  'Graphical
      TabIndex        =   37
      ToolTipText     =   "Add Tab at this position"
      Top             =   5760
      Visible         =   0   'False
      Width           =   1050
   End
   Begin VB.CommandButton cmdMoveContainedControls 
      Caption         =   "Move the controls to another tab"
      Enabled         =   0   'False
      Height          =   315
      Left            =   3360
      Style           =   1  'Graphical
      TabIndex        =   14
      ToolTipText     =   "Add Tab at this position"
      Top             =   1440
      Width           =   2748
   End
   Begin VB.Frame Frame1 
      Caption         =   "Picture:"
      Height          =   1536
      Left            =   120
      TabIndex        =   16
      Tag             =   "E"
      Top             =   2016
      Width           =   1440
      Begin VB.CommandButton cmdCopyPicture 
         Enabled         =   0   'False
         Height          =   375
         Left            =   930
         Picture         =   "ptpSSTabExTabs.pgx":0000
         Style           =   1  'Graphical
         TabIndex        =   20
         Tag             =   "E"
         ToolTipText     =   "Clear Picture"
         Top             =   1044
         Width           =   375
      End
      Begin VB.PictureBox picImgPicture 
         AutoRedraw      =   -1  'True
         AutoSize        =   -1  'True
         BackColor       =   &H00C0C0C0&
         BorderStyle     =   0  'None
         Enabled         =   0   'False
         Height          =   540
         Left            =   120
         ScaleHeight     =   45
         ScaleMode       =   3  'Pixel
         ScaleWidth      =   45
         TabIndex        =   17
         TabStop         =   0   'False
         Top             =   270
         Width           =   540
      End
      Begin VB.CommandButton cmdBrowsePicture 
         Height          =   375
         Left            =   930
         Picture         =   "ptpSSTabExTabs.pgx":058A
         Style           =   1  'Graphical
         TabIndex        =   18
         Tag             =   "E"
         ToolTipText     =   "Browse Picture"
         Top             =   264
         Width           =   375
      End
      Begin VB.CommandButton cmdDeletePicture 
         Enabled         =   0   'False
         Height          =   375
         Left            =   930
         Picture         =   "ptpSSTabExTabs.pgx":06D4
         Style           =   1  'Graphical
         TabIndex        =   19
         Tag             =   "E"
         ToolTipText     =   "Clear Picture"
         Top             =   648
         Width           =   375
      End
   End
   Begin VB.Frame Frame16 
      Caption         =   "Pic16 (96 DPI):"
      Height          =   1536
      Left            =   120
      TabIndex        =   22
      Tag             =   "E"
      Top             =   4032
      Width           =   1440
      Begin VB.CommandButton cmdDeletePic16 
         Enabled         =   0   'False
         Height          =   375
         Left            =   936
         Picture         =   "ptpSSTabExTabs.pgx":081E
         Style           =   1  'Graphical
         TabIndex        =   25
         Tag             =   "E"
         ToolTipText     =   "Clear Picture"
         Top             =   648
         Width           =   375
      End
      Begin VB.CommandButton cmdBrowsePic16 
         Height          =   375
         Left            =   936
         Picture         =   "ptpSSTabExTabs.pgx":0968
         Style           =   1  'Graphical
         TabIndex        =   24
         Tag             =   "E"
         ToolTipText     =   "Browse Picture"
         Top             =   264
         Width           =   375
      End
      Begin VB.PictureBox picImgPic16 
         AutoRedraw      =   -1  'True
         AutoSize        =   -1  'True
         BackColor       =   &H00C0C0C0&
         BorderStyle     =   0  'None
         Enabled         =   0   'False
         Height          =   540
         Left            =   120
         ScaleHeight     =   45
         ScaleMode       =   3  'Pixel
         ScaleWidth      =   45
         TabIndex        =   23
         TabStop         =   0   'False
         Top             =   270
         Width           =   540
      End
      Begin VB.CommandButton cmdCopyPic16 
         Enabled         =   0   'False
         Height          =   375
         Left            =   936
         Picture         =   "ptpSSTabExTabs.pgx":0AB2
         Style           =   1  'Graphical
         TabIndex        =   26
         Tag             =   "E"
         ToolTipText     =   "Clear Picture"
         Top             =   1044
         Width           =   375
      End
   End
   Begin VB.Frame Frame20 
      Caption         =   "Pic20 (120 DPI):"
      Height          =   1536
      Left            =   1620
      TabIndex        =   27
      Tag             =   "E"
      Top             =   4032
      Width           =   1440
      Begin VB.CommandButton cmdDeletePic20 
         Enabled         =   0   'False
         Height          =   375
         Left            =   930
         Picture         =   "ptpSSTabExTabs.pgx":103C
         Style           =   1  'Graphical
         TabIndex        =   30
         Tag             =   "E"
         ToolTipText     =   "Clear Picture"
         Top             =   648
         Width           =   375
      End
      Begin VB.CommandButton cmdBrowsePic20 
         Height          =   375
         Left            =   930
         Picture         =   "ptpSSTabExTabs.pgx":1186
         Style           =   1  'Graphical
         TabIndex        =   29
         Tag             =   "E"
         ToolTipText     =   "Browse Picture"
         Top             =   264
         Width           =   375
      End
      Begin VB.PictureBox picImgPic20 
         AutoRedraw      =   -1  'True
         AutoSize        =   -1  'True
         BackColor       =   &H00C0C0C0&
         BorderStyle     =   0  'None
         Enabled         =   0   'False
         Height          =   540
         Left            =   120
         ScaleHeight     =   45
         ScaleMode       =   3  'Pixel
         ScaleWidth      =   45
         TabIndex        =   28
         TabStop         =   0   'False
         Top             =   270
         Width           =   540
      End
      Begin VB.CommandButton cmdCopyPic20 
         Enabled         =   0   'False
         Height          =   375
         Left            =   930
         Picture         =   "ptpSSTabExTabs.pgx":12D0
         Style           =   1  'Graphical
         TabIndex        =   31
         Tag             =   "E"
         ToolTipText     =   "Clear Picture"
         Top             =   1044
         Width           =   375
      End
   End
   Begin VB.Frame Frame24 
      Caption         =   "Pic24 (144 DPI):"
      Height          =   1536
      Left            =   3120
      TabIndex        =   32
      Tag             =   "E"
      Top             =   4032
      Width           =   1440
      Begin VB.CommandButton cmdDeletePic24 
         Enabled         =   0   'False
         Height          =   375
         Left            =   930
         Picture         =   "ptpSSTabExTabs.pgx":185A
         Style           =   1  'Graphical
         TabIndex        =   35
         Tag             =   "E"
         ToolTipText     =   "Clear Picture"
         Top             =   648
         Width           =   375
      End
      Begin VB.CommandButton cmdBrowsePic24 
         Height          =   375
         Left            =   930
         Picture         =   "ptpSSTabExTabs.pgx":19A4
         Style           =   1  'Graphical
         TabIndex        =   34
         Tag             =   "E"
         ToolTipText     =   "Browse Picture"
         Top             =   264
         Width           =   375
      End
      Begin VB.PictureBox picImgPic24 
         AutoRedraw      =   -1  'True
         AutoSize        =   -1  'True
         BackColor       =   &H00C0C0C0&
         BorderStyle     =   0  'None
         Enabled         =   0   'False
         Height          =   540
         Left            =   120
         ScaleHeight     =   45
         ScaleMode       =   3  'Pixel
         ScaleWidth      =   45
         TabIndex        =   33
         TabStop         =   0   'False
         Top             =   270
         Width           =   540
      End
      Begin VB.CommandButton cmdCopyPic24 
         Enabled         =   0   'False
         Height          =   375
         Left            =   930
         Picture         =   "ptpSSTabExTabs.pgx":1AEE
         Style           =   1  'Graphical
         TabIndex        =   36
         Tag             =   "E"
         ToolTipText     =   "Clear Picture"
         Top             =   1044
         Width           =   375
      End
   End
   Begin VB.Timer tmrClick 
      Enabled         =   0   'False
      Interval        =   800
      Left            =   5535
      Top             =   810
   End
   Begin VB.Timer tmrAutoClick 
      Enabled         =   0   'False
      Interval        =   200
      Left            =   5535
      Top             =   450
   End
   Begin VB.CommandButton cmdTabPrev 
      Caption         =   "3"
      Enabled         =   0   'False
      BeginProperty Font 
         Name            =   "Marlett"
         Size            =   10.8
         Charset         =   2
         Weight          =   500
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   315
      Left            =   1815
      TabIndex        =   2
      Tag             =   "E"
      ToolTipText     =   "Go to previous tab"
      Top             =   75
      Width           =   240
   End
   Begin VB.CommandButton cmdTabNext 
      Caption         =   "4"
      Enabled         =   0   'False
      BeginProperty Font 
         Name            =   "Marlett"
         Size            =   10.8
         Charset         =   2
         Weight          =   500
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   315
      Left            =   2070
      TabIndex        =   3
      Tag             =   "E"
      ToolTipText     =   "Go to next tab"
      Top             =   75
      Width           =   240
   End
   Begin VB.TextBox txtTabToolTipText 
      Height          =   300
      Left            =   1815
      TabIndex        =   12
      Top             =   900
      Width           =   3432
   End
   Begin VB.TextBox txtTabCaption 
      Height          =   300
      Left            =   1815
      TabIndex        =   10
      Top             =   510
      Width           =   3432
   End
   Begin VB.CommandButton cmdMoveNext 
      Enabled         =   0   'False
      Height          =   315
      Left            =   5745
      Picture         =   "ptpSSTabExTabs.pgx":2078
      Style           =   1  'Graphical
      TabIndex        =   8
      Tag             =   "E"
      ToolTipText     =   "Move Tab Right"
      Top             =   75
      Width           =   375
   End
   Begin VB.CommandButton cmdMovePrevious 
      Enabled         =   0   'False
      Height          =   315
      Left            =   5340
      Picture         =   "ptpSSTabExTabs.pgx":21C2
      Style           =   1  'Graphical
      TabIndex        =   7
      Tag             =   "E"
      ToolTipText     =   "Move Tab Left"
      Top             =   75
      Width           =   375
   End
   Begin VB.CommandButton cmdInsertTab 
      Caption         =   "Insert tab"
      Height          =   315
      Left            =   2400
      Style           =   1  'Graphical
      TabIndex        =   4
      ToolTipText     =   "Add Tab at this position"
      Top             =   75
      Width           =   1050
   End
   Begin VB.CommandButton cmdRemoveTab 
      Height          =   315
      Left            =   3510
      Picture         =   "ptpSSTabExTabs.pgx":230C
      Style           =   1  'Graphical
      TabIndex        =   5
      Tag             =   "E"
      ToolTipText     =   "Remove Tab"
      Top             =   75
      Width           =   375
   End
   Begin VB.TextBox txtTabSel 
      BackColor       =   &H8000000F&
      Height          =   300
      Left            =   1140
      Locked          =   -1  'True
      MaxLength       =   3
      TabIndex        =   1
      TabStop         =   0   'False
      Top             =   75
      Width           =   588
   End
   Begin VB.Label lblContainedControls 
      Caption         =   "Controls in tab:"
      Height          =   270
      Left            =   1860
      TabIndex        =   13
      Top             =   1470
      Width           =   1545
   End
   Begin VB.Label lblWarningImgSizes 
      Caption         =   "Warning: images of different tabs but same DPI are not the same size. Click here to see details."
      ForeColor       =   &H000000FF&
      Height          =   456
      Left            =   1872
      MouseIcon       =   "ptpSSTabExTabs.pgx":2456
      MousePointer    =   99  'Custom
      TabIndex        =   38
      Top             =   5712
      Visible         =   0   'False
      Width           =   3936
   End
   Begin VB.Label Label4 
      Caption         =   "DPI Aware pictures:"
      Height          =   228
      Left            =   192
      TabIndex        =   21
      Top             =   3708
      Width           =   2796
   End
   Begin VB.Label Label3 
      Alignment       =   1  'Right Justify
      Caption         =   "TabToolTipText:"
      Height          =   225
      Left            =   240
      TabIndex        =   11
      Top             =   930
      Width           =   1485
   End
   Begin VB.Label Label13 
      Alignment       =   1  'Right Justify
      Caption         =   "TabCaption:"
      Height          =   225
      Left            =   240
      TabIndex        =   9
      Top             =   540
      Width           =   1485
   End
   Begin VB.Label Label2 
      Alignment       =   1  'Right Justify
      Caption         =   "Change order:"
      Height          =   270
      Left            =   4050
      TabIndex        =   6
      Top             =   105
      Width           =   1200
   End
   Begin VB.Label Label1 
      Alignment       =   1  'Right Justify
      Caption         =   "Current Tab:"
      Height          =   225
      Left            =   60
      TabIndex        =   0
      Top             =   90
      Width           =   975
   End
End
Attribute VB_Name = "ptpSSTabExTabs"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit

Private Enum vbExMouseButtonsConstants
    vxMBLeft = 1
    vxMBRight = 2
End Enum

Private Type POINTAPI
    X As Long
    Y As Long
End Type

Private Declare Function GetCursorPos Lib "user32" (lpPoint As POINTAPI) As Long
Private Declare Function WindowFromPoint Lib "user32" (ByVal xPoint As Long, ByVal yPoint As Long) As Long

Private Declare Function GetSystemMetrics Lib "user32" (ByVal nIndex As Long) As Long
Private Declare Function GetAsyncKeyState Lib "user32" (ByVal vKey As Long) As Integer
Private Const VK_LBUTTON = &H1
Private Const VK_RBUTTON = &H2
Private Const SM_SWAPBUTTON = 23&

Private Const cMsgBugIcons As String = "Note: If you are going to load *.ico files, do it from the property window (not from here). There seems to be a bug in VB6 that cause them to lose the tabsparency." & vbCrLf & "This operation will be Canceled." & vbCrLf & "To load pictures for different tabs in the property window (the one that appears pressing F4 on a control), select the appropriate tab with the TabSel property and then load the picture in the Picture property (or Pic16, Pic20 and Pic24)."

Private mLoading As Boolean

Private Type T_TabDataP
    Caption As String
    ToolTipText As String
    Picture As StdPicture
    Pic16 As StdPicture
    Pic20 As StdPicture
    Pic24 As StdPicture
    Controls As Collection
End Type

Private mTabData() As T_TabDataP
Private mTabSel As Long
Private mTabs As Long
Private mStrImagesDifferences As String

Private Sub cmdBrowsePicture_Click()
    Dim iDlg As New CDlg
    
    'iDlg.Filter = "Image files (*.bmp, *.ico)|*.bmp;*.ico"
    iDlg.Filter = "Bitmap files (*.bmp)|*.bmp"
    iDlg.ShowOpen
    If Not iDlg.Canceled Then
        If LCase(Right(iDlg.FileName, 4)) = ".ico" Then
            MsgBox cMsgBugIcons, vbExclamation
            Exit Sub
        End If
        Changed = True
        On Error Resume Next
        Set mTabData(mTabSel).Picture = LoadPicture(iDlg.FileName)
        If Err.Number <> 0 Then
            MsgBox "Error: " & Err.Number & ", " & Err.Description, vbCritical
        End If
        On Error GoTo 0
        ShowTabData
'        CheckImageSizes
    End If
End Sub

Private Sub cmdCopyPicture_Click()
    If Not picImgPicture.Picture Is Nothing Then
        Clipboard.Clear
        Clipboard.SetData picImgPicture.Picture
    End If
End Sub

Private Sub cmdDeletePicture_Click()
    Changed = True
    Set mTabData(mTabSel).Picture = Nothing
    ShowTabData
End Sub


Private Sub cmdBrowsePic16_Click()
    Dim iDlg As New CDlg
    
    iDlg.Filter = "Bitmap files (*.bmp)|*.bmp"
    iDlg.ShowOpen
    If Not iDlg.Canceled Then
        If LCase(Right(iDlg.FileName, 4)) = ".ico" Then
            MsgBox cMsgBugIcons, vbExclamation
            Exit Sub
        End If
        Changed = True
        On Error Resume Next
        Set mTabData(mTabSel).Pic16 = LoadPicture(iDlg.FileName)
        If Err.Number <> 0 Then
            MsgBox "Error: " & Err.Number & ", " & Err.Description, vbCritical
        End If
        On Error GoTo 0
        ShowTabData
        CheckImageSizes
    End If
End Sub

Private Sub cmdCopyPic16_Click()
    If Not picImgPic16.Picture Is Nothing Then
        Clipboard.Clear
        Clipboard.SetData picImgPic16.Picture
    End If
End Sub

Private Sub cmdDeletePic16_Click()
    Changed = True
    Set mTabData(mTabSel).Pic16 = Nothing
    ShowTabData
    CheckImageSizes
End Sub

Private Sub cmdBrowsePic20_Click()
    Dim iDlg As New CDlg
    
    iDlg.Filter = "Bitmap files (*.bmp)|*.bmp"
    iDlg.ShowOpen
    If Not iDlg.Canceled Then
        If LCase(Right(iDlg.FileName, 4)) = ".ico" Then
            MsgBox cMsgBugIcons, vbExclamation
            Exit Sub
        End If
        Changed = True
        On Error Resume Next
        Set mTabData(mTabSel).Pic20 = LoadPicture(iDlg.FileName)
        If Err.Number <> 0 Then
            MsgBox "Error: " & Err.Number & ", " & Err.Description, vbCritical
        End If
        On Error GoTo 0
        ShowTabData
        CheckImageSizes
    End If
End Sub

Private Sub cmdCopyPic20_Click()
    If Not picImgPic20.Picture Is Nothing Then
        Clipboard.Clear
        Clipboard.SetData picImgPic20.Picture
    End If
End Sub

Private Sub cmdDeletePic20_Click()
    Changed = True
    Set mTabData(mTabSel).Pic20 = Nothing
    ShowTabData
    CheckImageSizes
End Sub

Private Sub cmdBrowsePic24_Click()
    Dim iDlg As New CDlg
    
    iDlg.Filter = "Bitmap files (*.bmp)|*.bmp"
    iDlg.ShowOpen
    If Not iDlg.Canceled Then
        If LCase(Right(iDlg.FileName, 4)) = ".ico" Then
            MsgBox cMsgBugIcons, vbExclamation
            Exit Sub
        End If
        Changed = True
        On Error Resume Next
        Set mTabData(mTabSel).Pic24 = LoadPicture(iDlg.FileName)
        If Err.Number <> 0 Then
            MsgBox "Error: " & Err.Number & ", " & Err.Description, vbCritical
        End If
        On Error GoTo 0
        ShowTabData
        CheckImageSizes
    End If
End Sub

Private Sub cmdCopyPic24_Click()
    If Not picImgPic24.Picture Is Nothing Then
        Clipboard.Clear
        Clipboard.SetData picImgPic24.Picture
    End If
End Sub

Private Sub cmdDeletePic24_Click()
    Changed = True
    Set mTabData(mTabSel).Pic24 = Nothing
    ShowTabData
    CheckImageSizes
End Sub

'Private Sub cmdHelp_Click()
'    ShowComponentHelp TypeName(SelectedControls(0))
'End Sub

Private Sub cmdInsertTab_Click()
    Dim iTabData() As T_TabDataP
    Dim t As Long
    
    ReDim iTabData(mTabs)
    For t = 0 To mTabSel
        iTabData(t) = mTabData(t)
    Next t
    For t = mTabSel + 1 To mTabs - 1
        iTabData(t + 1) = mTabData(t)
        If iTabData(t + 1).Caption = "Tab " & CStr(t) Then
            iTabData(t + 1).Caption = "Tab " & CStr(t + 1)
        End If
    Next t
    mTabs = mTabs + 1
    
    ReDim mTabData(mTabs - 1)
    For t = 0 To mTabs - 1
        mTabData(t) = iTabData(t)
    Next t
    
    mTabSel = mTabSel + 1
    mTabData(mTabSel).Caption = "Tab " & CStr(mTabSel)
    Set mTabData(mTabSel).Controls = New Collection
    
    Changed = True
    
    ShowTabData

End Sub

Private Sub cmdMoveContainedControls_Click()
    Dim iStr As String
    Dim t As Long
    Dim iCtlName As Variant
    Dim iExchange As Boolean
    Dim iObj As Object
    
    iStr = InputBox("Enter the tab number where the controls will be moved.", "Enter tab number")
    If iStr <> "" Then
        If IsNumeric(iStr) Then
            t = Val(iStr)
            If (t > -1) And (t - (mTabs - 1)) Then
                If t = mTabSel Then
                    MsgBox "Destination tab number must be different than current tab.", vbExclamation
                Else
                    If mTabData(t).Controls.Count > 0 Then
                        Select Case MsgBox("Destination tab already has controls, do you want to exchange the controls with this tab? (Click 'No' to move all the controls to the destination tab without moving the ones that it already has to this tab).", vbYesNoCancel)
                            Case vbCancel
                                Exit Sub
                            Case vbNo
                            Case vbYes
                                iExchange = True
                        End Select
                    End If
                    If iExchange Then
                        Set iObj = mTabData(mTabSel).Controls
                        Set mTabData(mTabSel).Controls = mTabData(t).Controls
                        Set mTabData(t).Controls = iObj
                    Else
                        For Each iCtlName In mTabData(mTabSel).Controls
                            mTabData(t).Controls.Add iCtlName
                        Next
                        Set mTabData(mTabSel).Controls = New Collection
                    End If
                    Changed = True
                End If
            Else
                MsgBox "Invalid tab number.", vbCritical
            End If
        Else
            MsgBox "Invalid value.", vbCritical
        End If
    End If
End Sub

Private Sub cmdMoveControlToTab_Click()
    Dim iFrm As frmSSTabExSelectControl
    Dim t As Long
    Dim c As Long
    Dim iFound As Boolean
    
    Set iFrm = New frmSSTabExSelectControl
    For t = 0 To UBound(mTabData)
        If t <> mTabSel Then
            For c = 1 To mTabData(t).Controls.Count
                iFrm.lstControls.AddItem mTabData(t).Controls(c) & "   [now in Tab " & t & "]"
            Next
        End If
    Next t
    
    iFrm.Show 1
    If iFrm.SelectedControl <> "" Then
        For t = 0 To UBound(mTabData)
            If t <> mTabSel Then
                For c = 1 To mTabData(t).Controls.Count
                    If mTabData(t).Controls(c) = iFrm.SelectedControl Then
                        mTabData(t).Controls.Remove c
                        iFound = True
                        Exit For
                    End If
                Next
            End If
            If iFound Then Exit For
        Next t
        
        mTabData(mTabSel).Controls.Add iFrm.SelectedControl
        Changed = True
    End If
    
End Sub

Private Sub cmdMoveNext_Click()
    Dim iTD As T_TabDataP
    
    iTD = mTabData(mTabSel)
    mTabData(mTabSel) = mTabData(mTabSel + 1)
    mTabData(mTabSel + 1) = iTD
    mTabSel = mTabSel + 1
    Changed = True
    ShowTabData
End Sub

Private Sub cmdMoveNext_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
    tmrClick.Enabled = False
    tmrClick.Enabled = True
End Sub

Private Sub cmdMoveNext_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
    tmrClick.Enabled = False
End Sub

Private Sub cmdMovePrevious_Click()
    Dim iTD As T_TabDataP
    
    iTD = mTabData(mTabSel)
    mTabData(mTabSel) = mTabData(mTabSel - 1)
    mTabData(mTabSel - 1) = iTD
    mTabSel = mTabSel - 1
    Changed = True
    ShowTabData
End Sub

Private Sub cmdMovePrevious_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
    tmrClick.Enabled = False
    tmrClick.Enabled = True
End Sub

Private Sub cmdMovePrevious_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
    tmrClick.Enabled = False
End Sub

Private Sub cmdRemoveTab_Click()
    Dim iTabData() As T_TabDataP
    Dim t As Long
    
    If mTabData(mTabSel).Controls.Count > 0 Then
        MsgBox "Tab " & CStr(mTabSel) & " has controls, can't remove tabs with controls. Remove the contained controls first.", vbCritical
        Exit Sub
    End If
    If mTabs = 1 Then
        MsgBox "Can't remove last tab.", vbCritical
        Exit Sub
    End If
    
    ReDim iTabData(mTabs - 2)
    For t = 0 To mTabSel - 1
        iTabData(t) = mTabData(t)
    Next t
    For t = mTabSel + 1 To mTabs - 1
        iTabData(t - 1) = mTabData(t)
        If iTabData(t - 1).Caption = "Tab " & CStr(t) Then
            iTabData(t - 1).Caption = "Tab " & CStr(t - 1)
        End If
    Next t
    mTabs = mTabs - 1
    
    ReDim mTabData(mTabs - 1)
    For t = 0 To mTabs - 1
        mTabData(t) = iTabData(t)
    Next t
    
    If mTabSel = mTabs Then
        mTabSel = mTabSel - 1
    End If
    Changed = True
    
    ShowTabData
End Sub

Private Sub cmdTabNext_Click()
    mLoading = True
    mTabSel = mTabSel + 1
    ShowTabData
    mLoading = False
End Sub

Private Sub cmdTabNext_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
    tmrClick.Enabled = False
    tmrClick.Enabled = True
End Sub

Private Sub cmdTabNext_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
    tmrClick.Enabled = False
End Sub

Private Sub cmdTabPrev_Click()
    mLoading = True
    mTabSel = mTabSel - 1
    ShowTabData
    mLoading = False
End Sub

Private Sub cmdTabPrev_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
    tmrClick.Enabled = False
    tmrClick.Enabled = True
End Sub

Private Sub cmdTabPrev_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
    tmrClick.Enabled = False
End Sub

Private Sub lblWarningImgSizes_Click()
    MsgBox mStrImagesDifferences, vbInformation
End Sub

Private Sub PropertyPage_ApplyChanges()
    Dim t As Long
    Dim iSC As SSTabEx
    
    Set iSC = SelectedControls(0)
    iSC.HideAllContainedControls
    iSC.Tabs = mTabs
    For t = 0 To mTabs - 1
        iSC.TabCaption(t) = mTabData(t).Caption
        iSC.TabToolTipText(t) = mTabData(t).ToolTipText
        Set iSC.TabPicture(t) = mTabData(t).Picture
        Set iSC.TabPic16(t) = mTabData(t).Pic16
        Set iSC.TabPic20(t) = mTabData(t).Pic20
        Set iSC.TabPic24(t) = mTabData(t).Pic24
        Set iSC.TabControlsNames(t) = mTabData(t).Controls
    Next t
    iSC.MakeContainedControlsInSelTabVisible
End Sub

Private Sub PropertyPage_SelectionChanged()
    Dim t As Long
    Dim iSC As SSTabEx
    Dim iVar
    
    mLoading = True
    
    Set iSC = SelectedControls(0)
    mTabs = iSC.Tabs
    iSC.StoreVisibleControlsInSelectedTab
    ReDim mTabData(mTabs - 1)
    For t = 0 To mTabs - 1
        mTabData(t).Caption = iSC.TabCaption(t)
        mTabData(t).ToolTipText = iSC.TabToolTipText(t)
        Set mTabData(t).Picture = iSC.TabPicture(t)
        Set mTabData(t).Pic16 = iSC.TabPic16(t)
        Set mTabData(t).Pic20 = iSC.TabPic20(t)
        Set mTabData(t).Pic24 = iSC.TabPic24(t)
        Set mTabData(t).Controls = New Collection
        For Each iVar In iSC.TabControlsNames(t)
            mTabData(t).Controls.Add iVar
        Next
    Next t
    
    mTabSel = iSC.TabSel
    ShowTabData
    CheckImageSizes
    CheckImageSizes
    
    mLoading = False
End Sub

Private Sub ShowTabData()
    Dim t As Long
    
    t = mTabSel
    txtTabSel.Text = t
    txtTabCaption.Text = mTabData(t).Caption
    txtTabToolTipText.Text = mTabData(t).ToolTipText
    If PropertyPage.ActiveControl Is txtTabCaption Then
        txtTabCaption.SelStart = 0
        txtTabCaption.SelLength = Len(txtTabCaption.Text)
    ElseIf PropertyPage.ActiveControl Is txtTabToolTipText Then
        txtTabToolTipText.SelStart = 0
        txtTabToolTipText.SelLength = Len(txtTabToolTipText.Text)
    End If
    
    cmdTabPrev.Enabled = t > 0
    cmdTabNext.Enabled = t < (mTabs - 1)
    cmdMovePrevious.Enabled = t > 0
    cmdMoveNext.Enabled = t < (mTabs - 1)
    
    If mTabData(t).Picture Is Nothing Then
        Set picImgPicture.Picture = Nothing
        cmdDeletePicture.Enabled = False
        cmdCopyPicture.Enabled = False
    Else
        Set picImgPicture.Picture = mTabData(t).Picture
        cmdDeletePicture.Enabled = True
        cmdCopyPicture.Enabled = True
    End If
    
    If mTabData(t).Pic16 Is Nothing Then
        Set picImgPic16.Picture = Nothing
        cmdDeletePic16.Enabled = False
        cmdCopyPic16.Enabled = False
    Else
        Set picImgPic16.Picture = mTabData(t).Pic16
        cmdDeletePic16.Enabled = True
        cmdCopyPic16.Enabled = True
    End If

    If mTabData(t).Pic20 Is Nothing Then
        Set picImgPic20.Picture = Nothing
        cmdDeletePic20.Enabled = False
        cmdCopyPic20.Enabled = False
    Else
        Set picImgPic20.Picture = mTabData(t).Pic20
        cmdDeletePic20.Enabled = True
        cmdCopyPic20.Enabled = True
    End If

    If mTabData(t).Pic24 Is Nothing Then
        Set picImgPic24.Picture = Nothing
        cmdDeletePic24.Enabled = False
        cmdCopyPic24.Enabled = False
    Else
        Set picImgPic24.Picture = mTabData(t).Pic24
        cmdDeletePic24.Enabled = True
        cmdCopyPic24.Enabled = True
    End If
    
    lblContainedControls.Caption = "Controls in tab: " & mTabData(t).Controls.Count
    cmdMoveContainedControls.Enabled = (mTabData(t).Controls.Count > 0)
    
End Sub

Private Sub tmrAutoClick_Timer()
    Dim iHwnd As Long
    
    If Not MouseIsPressingAButton Then
        tmrAutoClick.Enabled = False
    Else
        iHwnd = WindowsUnderMouse
        If (iHwnd = cmdTabPrev.hWnd) Then
            If cmdTabPrev.Enabled Then cmdTabPrev_Click
        ElseIf (iHwnd = cmdTabNext.hWnd) Then
            If cmdTabNext.Enabled Then cmdTabNext_Click
        ElseIf (iHwnd = cmdMovePrevious.hWnd) Then
            If cmdMovePrevious.Enabled Then cmdMovePrevious_Click
        ElseIf (iHwnd = cmdMoveNext.hWnd) Then
            If cmdMoveNext.Enabled Then cmdMoveNext_Click
        End If
    End If
End Sub

Private Sub tmrClick_Timer()
    tmrClick.Enabled = False
    If MouseIsPressingAButton Then
        tmrAutoClick.Enabled = True
    End If
End Sub

Private Sub txtTabCaption_Change()
    If Not mLoading Then
        Changed = True
        mTabData(mTabSel).Caption = txtTabCaption.Text
    End If
End Sub

Private Sub txtTabCaption_GotFocus()
    txtTabCaption.SelStart = 0
    txtTabCaption.SelLength = Len(txtTabCaption.Text)
End Sub

Private Sub txtTabToolTipText_Change()
    If Not mLoading Then
        Changed = True
        mTabData(mTabSel).ToolTipText = txtTabToolTipText.Text
    End If
End Sub

Private Sub txtTabToolTipText_GotFocus()
    txtTabToolTipText.SelStart = 0
    txtTabToolTipText.SelLength = Len(txtTabToolTipText.Text)
End Sub

Private Function WindowsUnderMouse() As Long
    Dim iPt As POINTAPI
    
    GetCursorPos iPt
    WindowsUnderMouse = WindowFromPoint(iPt.X, iPt.Y)
End Function

Private Function IsMouseButtonPressed(nButton As vbExMouseButtonsConstants) As Boolean
    Dim iButton As Long
    
    iButton = nButton
    If GetSystemMetrics(SM_SWAPBUTTON) <> 0 Then
        If nButton = vxMBLeft Then
            iButton = VK_RBUTTON
        ElseIf nButton = vxMBRight Then
            iButton = VK_LBUTTON
        End If
    End If
    IsMouseButtonPressed = GetAsyncKeyState(iButton) <> 0
End Function

Private Function MouseIsPressingAButton() As Boolean
    Dim iHwnd As Long
    
    If IsMouseButtonPressed(vxMBLeft) Then
        iHwnd = WindowsUnderMouse
        If (iHwnd = cmdTabPrev.hWnd) Or (iHwnd = cmdTabNext.hWnd) Or (iHwnd = cmdMovePrevious.hWnd) Or (iHwnd = cmdMoveNext.hWnd) Then
            MouseIsPressingAButton = True
        End If
    End If
End Function

Private Sub CheckImageSizes()
    Dim t As Long
    Dim iStrImgSize As String
    Dim iStrImgSize_Tab As Long
    Dim iStr As String
    
    mStrImagesDifferences = ""
    
    iStrImgSize = ""
    For t = 0 To mTabs - 1
        If Not mTabData(t).Pic16 Is Nothing Then
            iStr = Round(PropertyPage.ScaleX(mTabData(t).Pic16.Width, vbHimetric, vbPixels)) & "x" & Round(PropertyPage.ScaleY(mTabData(t).Pic16.Height, vbHimetric, vbPixels))
            If iStrImgSize = "" Then
                iStrImgSize = iStr
                iStrImgSize_Tab = t
            ElseIf iStr <> iStrImgSize Then
                mStrImagesDifferences = mStrImagesDifferences & "The Image size of the property 'Pic16' in Tab " & CStr(iStrImgSize_Tab) & " is " & iStrImgSize & " and in Tab " & CStr(t) & " it is " & iStr & "." & vbCrLf
                Exit For
            End If
        End If
    Next t
    
    iStrImgSize = ""
    For t = 0 To mTabs - 1
        If Not mTabData(t).Pic20 Is Nothing Then
            iStr = Round(PropertyPage.ScaleX(mTabData(t).Pic20.Width, vbHimetric, vbPixels)) & "x" & Round(PropertyPage.ScaleY(mTabData(t).Pic20.Height, vbHimetric, vbPixels))
            If iStrImgSize = "" Then
                iStrImgSize = iStr
                iStrImgSize_Tab = t
            ElseIf iStr <> iStrImgSize Then
                mStrImagesDifferences = mStrImagesDifferences & "The Image size of the property 'Pic20' in Tab " & CStr(iStrImgSize_Tab) & " is " & iStrImgSize & " and in Tab " & CStr(t) & " it is " & iStr & "." & vbCrLf
                Exit For
            End If
        End If
    Next t
    
    iStrImgSize = ""
    For t = 0 To mTabs - 1
        If Not mTabData(t).Pic24 Is Nothing Then
            iStr = Round(PropertyPage.ScaleX(mTabData(t).Pic24.Width, vbHimetric, vbPixels)) & "x" & Round(PropertyPage.ScaleY(mTabData(t).Pic24.Height, vbHimetric, vbPixels))
            If iStrImgSize = "" Then
                iStrImgSize = iStr
                iStrImgSize_Tab = t
            ElseIf iStr <> iStrImgSize Then
                mStrImagesDifferences = mStrImagesDifferences & "The Image size of the property 'Pic24' in Tab " & CStr(iStrImgSize_Tab) & " is " & iStrImgSize & " and in Tab " & CStr(t) & " it is " & iStr & "." & vbCrLf
                Exit For
            End If
        End If
    Next t
    
    If mStrImagesDifferences <> "" Then
        mStrImagesDifferences = mStrImagesDifferences & vbCrLf & "(There might be other images that have different sizes besides these ones)."
        lblWarningImgSizes.Visible = True
    Else
        lblWarningImgSizes.Visible = False
    End If
    
End Sub
